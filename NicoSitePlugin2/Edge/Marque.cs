// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dwango/nicolive/chat/data/Marque.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dwango.Nicolive.Chat.Data {

  /// <summary>Holder for reflection information generated from dwango/nicolive/chat/data/Marque.proto</summary>
  public static partial class MarqueReflection {

    #region Descriptor
    /// <summary>File descriptor for dwango/nicolive/chat/data/Marque.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MarqueReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZkd2FuZ28vbmljb2xpdmUvY2hhdC9kYXRhL01hcnF1ZS5wcm90bxIZZHdh",
            "bmdvLm5pY29saXZlLmNoYXQuZGF0YRoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0",
            "aW9uLnByb3RvGi9kd2FuZ28vbmljb2xpdmUvY2hhdC9kYXRhL09wZXJhdG9y",
            "Q29tbWVudC5wcm90byLCAQoGTWFycXVlEjoKB2Rpc3BsYXkYASABKAsyKS5k",
            "d2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLk1hcnF1ZS5EaXNwbGF5GnwKB0Rp",
            "c3BsYXkSRAoQb3BlcmF0b3JfY29tbWVudBgBIAEoCzIqLmR3YW5nby5uaWNv",
            "bGl2ZS5jaGF0LmRhdGEuT3BlcmF0b3JDb21tZW50EisKCGR1cmF0aW9uGAMg",
            "ASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.OperatorCommentReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Data.Marque), global::Dwango.Nicolive.Chat.Data.Marque.Parser, new[]{ "Display" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Data.Marque.Types.Display), global::Dwango.Nicolive.Chat.Data.Marque.Types.Display.Parser, new[]{ "OperatorComment", "Duration" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Marque : pb::IMessage<Marque> {
    private static readonly pb::MessageParser<Marque> _parser = new pb::MessageParser<Marque>(() => new Marque());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Marque> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwango.Nicolive.Chat.Data.MarqueReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Marque() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Marque(Marque other) : this() {
      display_ = other.display_ != null ? other.display_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Marque Clone() {
      return new Marque(this);
    }

    /// <summary>Field number for the "display" field.</summary>
    public const int DisplayFieldNumber = 1;
    private global::Dwango.Nicolive.Chat.Data.Marque.Types.Display display_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.Marque.Types.Display Display {
      get { return display_; }
      set {
        display_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Marque);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Marque other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Display, other.Display)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (display_ != null) hash ^= Display.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (display_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Display);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (display_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Display);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Marque other) {
      if (other == null) {
        return;
      }
      if (other.display_ != null) {
        if (display_ == null) {
          display_ = new global::Dwango.Nicolive.Chat.Data.Marque.Types.Display();
        }
        Display.MergeFrom(other.Display);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (display_ == null) {
              display_ = new global::Dwango.Nicolive.Chat.Data.Marque.Types.Display();
            }
            input.ReadMessage(display_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Marque message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Display : pb::IMessage<Display> {
        private static readonly pb::MessageParser<Display> _parser = new pb::MessageParser<Display>(() => new Display());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Display> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Dwango.Nicolive.Chat.Data.Marque.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Display() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Display(Display other) : this() {
          operatorComment_ = other.operatorComment_ != null ? other.operatorComment_.Clone() : null;
          duration_ = other.duration_ != null ? other.duration_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Display Clone() {
          return new Display(this);
        }

        /// <summary>Field number for the "operator_comment" field.</summary>
        public const int OperatorCommentFieldNumber = 1;
        private global::Dwango.Nicolive.Chat.Data.OperatorComment operatorComment_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwango.Nicolive.Chat.Data.OperatorComment OperatorComment {
          get { return operatorComment_; }
          set {
            operatorComment_ = value;
          }
        }

        /// <summary>Field number for the "duration" field.</summary>
        public const int DurationFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Duration duration_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Duration Duration {
          get { return duration_; }
          set {
            duration_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Display);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Display other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(OperatorComment, other.OperatorComment)) return false;
          if (!object.Equals(Duration, other.Duration)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (operatorComment_ != null) hash ^= OperatorComment.GetHashCode();
          if (duration_ != null) hash ^= Duration.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (operatorComment_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(OperatorComment);
          }
          if (duration_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Duration);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (operatorComment_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperatorComment);
          }
          if (duration_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Display other) {
          if (other == null) {
            return;
          }
          if (other.operatorComment_ != null) {
            if (operatorComment_ == null) {
              operatorComment_ = new global::Dwango.Nicolive.Chat.Data.OperatorComment();
            }
            OperatorComment.MergeFrom(other.OperatorComment);
          }
          if (other.duration_ != null) {
            if (duration_ == null) {
              duration_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            Duration.MergeFrom(other.Duration);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (operatorComment_ == null) {
                  operatorComment_ = new global::Dwango.Nicolive.Chat.Data.OperatorComment();
                }
                input.ReadMessage(operatorComment_);
                break;
              }
              case 26: {
                if (duration_ == null) {
                  duration_ = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(duration_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
