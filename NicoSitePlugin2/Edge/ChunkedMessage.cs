// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dwango/nicolive/chat/service/edge/ChunkedMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dwango.Nicolive.Chat.Service.Edge {

  /// <summary>Holder for reflection information generated from dwango/nicolive/chat/service/edge/ChunkedMessage.proto</summary>
  public static partial class ChunkedMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for dwango/nicolive/chat/service/edge/ChunkedMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChunkedMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZkd2FuZ28vbmljb2xpdmUvY2hhdC9zZXJ2aWNlL2VkZ2UvQ2h1bmtlZE1l",
            "c3NhZ2UucHJvdG8SIWR3YW5nby5uaWNvbGl2ZS5jaGF0LnNlcnZpY2UuZWRn",
            "ZRofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxovZHdhbmdvL25p",
            "Y29saXZlL2NoYXQvZGF0YS9OaWNvbGl2ZU1lc3NhZ2UucHJvdG8aLWR3YW5n",
            "by9uaWNvbGl2ZS9jaGF0L2RhdGEvTmljb2xpdmVTdGF0ZS5wcm90bxouZHdh",
            "bmdvL25pY29saXZlL2NoYXQvZGF0YS9OaWNvbGl2ZU9yaWdpbi5wcm90byK1",
            "AwoOQ2h1bmtlZE1lc3NhZ2USRAoEbWV0YRgBIAEoCzI2LmR3YW5nby5uaWNv",
            "bGl2ZS5jaGF0LnNlcnZpY2UuZWRnZS5DaHVua2VkTWVzc2FnZS5NZXRhEj0K",
            "B21lc3NhZ2UYAiABKAsyKi5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLk5p",
            "Y29saXZlTWVzc2FnZUgAEjkKBXN0YXRlGAQgASgLMiguZHdhbmdvLm5pY29s",
            "aXZlLmNoYXQuZGF0YS5OaWNvbGl2ZVN0YXRlSAASSgoGc2lnbmFsGAUgASgO",
            "MjguZHdhbmdvLm5pY29saXZlLmNoYXQuc2VydmljZS5lZGdlLkNodW5rZWRN",
            "ZXNzYWdlLlNpZ25hbEgAGnUKBE1ldGESCgoCaWQYASABKAkSJgoCYXQYAiAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjkKBm9yaWdpbhgDIAEo",
            "CzIpLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuTmljb2xpdmVPcmlnaW4i",
            "FQoGU2lnbmFsEgsKB0ZsdXNoZWQQAEIJCgdwYXlsb2FkYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.NicoliveMessageReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.NicoliveStateReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.NicoliveOriginReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage), global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage.Parser, new[]{ "Meta", "Message", "State", "Signal" }, new[]{ "Payload" }, new[]{ typeof(global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage.Types.Signal) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage.Types.Meta), global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage.Types.Meta.Parser, new[]{ "Id", "At", "Origin" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ChunkedMessage : pb::IMessage<ChunkedMessage> {
    private static readonly pb::MessageParser<ChunkedMessage> _parser = new pb::MessageParser<ChunkedMessage>(() => new ChunkedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChunkedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChunkedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChunkedMessage(ChunkedMessage other) : this() {
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      switch (other.PayloadCase) {
        case PayloadOneofCase.Message:
          Message = other.Message.Clone();
          break;
        case PayloadOneofCase.State:
          State = other.State.Clone();
          break;
        case PayloadOneofCase.Signal:
          Signal = other.Signal;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChunkedMessage Clone() {
      return new ChunkedMessage(this);
    }

    /// <summary>Field number for the "meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage.Types.Meta meta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage.Types.Meta Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.NicoliveMessage Message {
      get { return payloadCase_ == PayloadOneofCase.Message ? (global::Dwango.Nicolive.Chat.Data.NicoliveMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Message;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.NicoliveState State {
      get { return payloadCase_ == PayloadOneofCase.State ? (global::Dwango.Nicolive.Chat.Data.NicoliveState) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.State;
      }
    }

    /// <summary>Field number for the "signal" field.</summary>
    public const int SignalFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage.Types.Signal Signal {
      get { return payloadCase_ == PayloadOneofCase.Signal ? (global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage.Types.Signal) payload_ : 0; }
      set {
        payload_ = value;
        payloadCase_ = PayloadOneofCase.Signal;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Message = 2,
      State = 4,
      Signal = 5,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChunkedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChunkedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (Signal != other.Signal) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Message) hash ^= Message.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.State) hash ^= State.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Signal) hash ^= Signal.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (meta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Meta);
      }
      if (payloadCase_ == PayloadOneofCase.Message) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (payloadCase_ == PayloadOneofCase.State) {
        output.WriteRawTag(34);
        output.WriteMessage(State);
      }
      if (payloadCase_ == PayloadOneofCase.Signal) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Signal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (meta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (payloadCase_ == PayloadOneofCase.Message) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (payloadCase_ == PayloadOneofCase.State) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (payloadCase_ == PayloadOneofCase.Signal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Signal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChunkedMessage other) {
      if (other == null) {
        return;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          meta_ = new global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage.Types.Meta();
        }
        Meta.MergeFrom(other.Meta);
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Message:
          if (Message == null) {
            Message = new global::Dwango.Nicolive.Chat.Data.NicoliveMessage();
          }
          Message.MergeFrom(other.Message);
          break;
        case PayloadOneofCase.State:
          if (State == null) {
            State = new global::Dwango.Nicolive.Chat.Data.NicoliveState();
          }
          State.MergeFrom(other.State);
          break;
        case PayloadOneofCase.Signal:
          Signal = other.Signal;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (meta_ == null) {
              meta_ = new global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage.Types.Meta();
            }
            input.ReadMessage(meta_);
            break;
          }
          case 18: {
            global::Dwango.Nicolive.Chat.Data.NicoliveMessage subBuilder = new global::Dwango.Nicolive.Chat.Data.NicoliveMessage();
            if (payloadCase_ == PayloadOneofCase.Message) {
              subBuilder.MergeFrom(Message);
            }
            input.ReadMessage(subBuilder);
            Message = subBuilder;
            break;
          }
          case 34: {
            global::Dwango.Nicolive.Chat.Data.NicoliveState subBuilder = new global::Dwango.Nicolive.Chat.Data.NicoliveState();
            if (payloadCase_ == PayloadOneofCase.State) {
              subBuilder.MergeFrom(State);
            }
            input.ReadMessage(subBuilder);
            State = subBuilder;
            break;
          }
          case 40: {
            payload_ = input.ReadEnum();
            payloadCase_ = PayloadOneofCase.Signal;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ChunkedMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Signal {
        [pbr::OriginalName("Flushed")] Flushed = 0,
      }

      public sealed partial class Meta : pb::IMessage<Meta> {
        private static readonly pb::MessageParser<Meta> _parser = new pb::MessageParser<Meta>(() => new Meta());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Meta> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Dwango.Nicolive.Chat.Service.Edge.ChunkedMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Meta() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Meta(Meta other) : this() {
          id_ = other.id_;
          at_ = other.at_ != null ? other.at_.Clone() : null;
          origin_ = other.origin_ != null ? other.origin_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Meta Clone() {
          return new Meta(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "at" field.</summary>
        public const int AtFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp at_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp At {
          get { return at_; }
          set {
            at_ = value;
          }
        }

        /// <summary>Field number for the "origin" field.</summary>
        public const int OriginFieldNumber = 3;
        private global::Dwango.Nicolive.Chat.Data.NicoliveOrigin origin_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwango.Nicolive.Chat.Data.NicoliveOrigin Origin {
          get { return origin_; }
          set {
            origin_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Meta);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Meta other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (!object.Equals(At, other.At)) return false;
          if (!object.Equals(Origin, other.Origin)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (at_ != null) hash ^= At.GetHashCode();
          if (origin_ != null) hash ^= Origin.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (at_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(At);
          }
          if (origin_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Origin);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (at_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(At);
          }
          if (origin_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Meta other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.at_ != null) {
            if (at_ == null) {
              at_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            At.MergeFrom(other.At);
          }
          if (other.origin_ != null) {
            if (origin_ == null) {
              origin_ = new global::Dwango.Nicolive.Chat.Data.NicoliveOrigin();
            }
            Origin.MergeFrom(other.Origin);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                if (at_ == null) {
                  at_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(at_);
                break;
              }
              case 26: {
                if (origin_ == null) {
                  origin_ = new global::Dwango.Nicolive.Chat.Data.NicoliveOrigin();
                }
                input.ReadMessage(origin_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
