// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dwango/nicolive/chat/data/Chat.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dwango.Nicolive.Chat.Data {

  /// <summary>Holder for reflection information generated from dwango/nicolive/chat/data/Chat.proto</summary>
  public static partial class ChatReflection {

    #region Descriptor
    /// <summary>File descriptor for dwango/nicolive/chat/data/Chat.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChatReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRkd2FuZ28vbmljb2xpdmUvY2hhdC9kYXRhL0NoYXQucHJvdG8SGWR3YW5n",
            "by5uaWNvbGl2ZS5jaGF0LmRhdGEijwkKBENoYXQSDwoHY29udGVudBgBIAEo",
            "CRIMCgRuYW1lGAIgASgJEgwKBHZwb3MYAyABKAUSRQoOYWNjb3VudF9zdGF0",
            "dXMYBCABKA4yLS5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLkNoYXQuQWNj",
            "b3VudFN0YXR1cxIVCgtyYXdfdXNlcl9pZBgFIAEoA0gAEhgKDmhhc2hlZF91",
            "c2VyX2lkGAYgASgJSAASOgoIbW9kaWZpZXIYByABKAsyKC5kd2FuZ28ubmlj",
            "b2xpdmUuY2hhdC5kYXRhLkNoYXQuTW9kaWZpZXISCgoCbm8YCCABKAUa4wYK",
            "CE1vZGlmaWVyEj4KCHBvc2l0aW9uGAEgASgOMiwuZHdhbmdvLm5pY29saXZl",
            "LmNoYXQuZGF0YS5DaGF0Lk1vZGlmaWVyLlBvcxI7CgRzaXplGAIgASgOMi0u",
            "ZHdhbmdvLm5pY29saXZlLmNoYXQuZGF0YS5DaGF0Lk1vZGlmaWVyLlNpemUS",
            "SQoLbmFtZWRfY29sb3IYAyABKA4yMi5kd2FuZ28ubmljb2xpdmUuY2hhdC5k",
            "YXRhLkNoYXQuTW9kaWZpZXIuQ29sb3JOYW1lSAASSAoKZnVsbF9jb2xvchgE",
            "IAEoCzIyLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuQ2hhdC5Nb2RpZmll",
            "ci5GdWxsQ29sb3JIABI7CgRmb250GAUgASgOMi0uZHdhbmdvLm5pY29saXZl",
            "LmNoYXQuZGF0YS5DaGF0Lk1vZGlmaWVyLkZvbnQSQQoHb3BhY2l0eRgGIAEo",
            "DjIwLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuQ2hhdC5Nb2RpZmllci5P",
            "cGFjaXR5GiwKCUZ1bGxDb2xvchIJCgFyGAEgASgFEgkKAWcYAiABKAUSCQoB",
            "YhgDIAEoBSIiCgNQb3MSCAoEbmFrYRAAEgkKBXNoaXRhEAESBgoCdWUQAiIm",
            "CgRTaXplEgoKBm1lZGl1bRAAEgkKBXNtYWxsEAESBwoDYmlnEAIi7QEKCUNv",
            "bG9yTmFtZRIJCgV3aGl0ZRAAEgcKA3JlZBABEggKBHBpbmsQAhIKCgZvcmFu",
            "Z2UQAxIKCgZ5ZWxsb3cQBBIJCgVncmVlbhAFEggKBGN5YW4QBhIICgRibHVl",
            "EAcSCgoGcHVycGxlEAgSCQoFYmxhY2sQCRIKCgZ3aGl0ZTIQChIICgRyZWQy",
            "EAsSCQoFcGluazIQDBILCgdvcmFuZ2UyEA0SCwoHeWVsbG93MhAOEgoKBmdy",
            "ZWVuMhAPEgkKBWN5YW4yEBASCQoFYmx1ZTIQERILCgdwdXJwbGUyEBISCgoG",
            "YmxhY2syEBMiKgoERm9udBIKCgZkZWZvbnQQABIKCgZtaW5jaG8QARIKCgZn",
            "b3RoaWMQAiImCgdPcGFjaXR5EgoKBk5vcm1hbBAAEg8KC1RyYW5zbHVjZW50",
            "EAFCBwoFY29sb3IiKgoNQWNjb3VudFN0YXR1cxIMCghTdGFuZGFyZBAAEgsK",
            "B1ByZW1pdW0QAUIICgZzb3VyY2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Data.Chat), global::Dwango.Nicolive.Chat.Data.Chat.Parser, new[]{ "Content", "Name", "Vpos", "AccountStatus", "RawUserId", "HashedUserId", "Modifier", "No" }, new[]{ "Source" }, new[]{ typeof(global::Dwango.Nicolive.Chat.Data.Chat.Types.AccountStatus) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier), global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Parser, new[]{ "Position", "Size", "NamedColor", "FullColor", "Font", "Opacity" }, new[]{ "Color" }, new[]{ typeof(global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Pos), typeof(global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Size), typeof(global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.ColorName), typeof(global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Font), typeof(global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Opacity) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.FullColor), global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.FullColor.Parser, new[]{ "R", "G", "B" }, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Chat : pb::IMessage<Chat> {
    private static readonly pb::MessageParser<Chat> _parser = new pb::MessageParser<Chat>(() => new Chat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Chat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwango.Nicolive.Chat.Data.ChatReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat(Chat other) : this() {
      content_ = other.content_;
      name_ = other.name_;
      vpos_ = other.vpos_;
      accountStatus_ = other.accountStatus_;
      modifier_ = other.modifier_ != null ? other.modifier_.Clone() : null;
      no_ = other.no_;
      switch (other.SourceCase) {
        case SourceOneofCase.RawUserId:
          RawUserId = other.RawUserId;
          break;
        case SourceOneofCase.HashedUserId:
          HashedUserId = other.HashedUserId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat Clone() {
      return new Chat(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vpos" field.</summary>
    public const int VposFieldNumber = 3;
    private int vpos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vpos {
      get { return vpos_; }
      set {
        vpos_ = value;
      }
    }

    /// <summary>Field number for the "account_status" field.</summary>
    public const int AccountStatusFieldNumber = 4;
    private global::Dwango.Nicolive.Chat.Data.Chat.Types.AccountStatus accountStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.Chat.Types.AccountStatus AccountStatus {
      get { return accountStatus_; }
      set {
        accountStatus_ = value;
      }
    }

    /// <summary>Field number for the "raw_user_id" field.</summary>
    public const int RawUserIdFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RawUserId {
      get { return sourceCase_ == SourceOneofCase.RawUserId ? (long) source_ : 0L; }
      set {
        source_ = value;
        sourceCase_ = SourceOneofCase.RawUserId;
      }
    }

    /// <summary>Field number for the "hashed_user_id" field.</summary>
    public const int HashedUserIdFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashedUserId {
      get { return sourceCase_ == SourceOneofCase.HashedUserId ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.HashedUserId;
      }
    }

    /// <summary>Field number for the "modifier" field.</summary>
    public const int ModifierFieldNumber = 7;
    private global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier modifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier Modifier {
      get { return modifier_; }
      set {
        modifier_ = value;
      }
    }

    /// <summary>Field number for the "no" field.</summary>
    public const int NoFieldNumber = 8;
    private int no_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int No {
      get { return no_; }
      set {
        no_ = value;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      RawUserId = 5,
      HashedUserId = 6,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Chat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Chat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (Name != other.Name) return false;
      if (Vpos != other.Vpos) return false;
      if (AccountStatus != other.AccountStatus) return false;
      if (RawUserId != other.RawUserId) return false;
      if (HashedUserId != other.HashedUserId) return false;
      if (!object.Equals(Modifier, other.Modifier)) return false;
      if (No != other.No) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Vpos != 0) hash ^= Vpos.GetHashCode();
      if (AccountStatus != 0) hash ^= AccountStatus.GetHashCode();
      if (sourceCase_ == SourceOneofCase.RawUserId) hash ^= RawUserId.GetHashCode();
      if (sourceCase_ == SourceOneofCase.HashedUserId) hash ^= HashedUserId.GetHashCode();
      if (modifier_ != null) hash ^= Modifier.GetHashCode();
      if (No != 0) hash ^= No.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Vpos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Vpos);
      }
      if (AccountStatus != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) AccountStatus);
      }
      if (sourceCase_ == SourceOneofCase.RawUserId) {
        output.WriteRawTag(40);
        output.WriteInt64(RawUserId);
      }
      if (sourceCase_ == SourceOneofCase.HashedUserId) {
        output.WriteRawTag(50);
        output.WriteString(HashedUserId);
      }
      if (modifier_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Modifier);
      }
      if (No != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(No);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Vpos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vpos);
      }
      if (AccountStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AccountStatus);
      }
      if (sourceCase_ == SourceOneofCase.RawUserId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RawUserId);
      }
      if (sourceCase_ == SourceOneofCase.HashedUserId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HashedUserId);
      }
      if (modifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Modifier);
      }
      if (No != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(No);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Chat other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Vpos != 0) {
        Vpos = other.Vpos;
      }
      if (other.AccountStatus != 0) {
        AccountStatus = other.AccountStatus;
      }
      if (other.modifier_ != null) {
        if (modifier_ == null) {
          modifier_ = new global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier();
        }
        Modifier.MergeFrom(other.Modifier);
      }
      if (other.No != 0) {
        No = other.No;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.RawUserId:
          RawUserId = other.RawUserId;
          break;
        case SourceOneofCase.HashedUserId:
          HashedUserId = other.HashedUserId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Vpos = input.ReadInt32();
            break;
          }
          case 32: {
            accountStatus_ = (global::Dwango.Nicolive.Chat.Data.Chat.Types.AccountStatus) input.ReadEnum();
            break;
          }
          case 40: {
            RawUserId = input.ReadInt64();
            break;
          }
          case 50: {
            HashedUserId = input.ReadString();
            break;
          }
          case 58: {
            if (modifier_ == null) {
              modifier_ = new global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier();
            }
            input.ReadMessage(modifier_);
            break;
          }
          case 64: {
            No = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Chat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum AccountStatus {
        [pbr::OriginalName("Standard")] Standard = 0,
        [pbr::OriginalName("Premium")] Premium = 1,
      }

      public sealed partial class Modifier : pb::IMessage<Modifier> {
        private static readonly pb::MessageParser<Modifier> _parser = new pb::MessageParser<Modifier>(() => new Modifier());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Modifier> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Dwango.Nicolive.Chat.Data.Chat.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Modifier() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Modifier(Modifier other) : this() {
          position_ = other.position_;
          size_ = other.size_;
          font_ = other.font_;
          opacity_ = other.opacity_;
          switch (other.ColorCase) {
            case ColorOneofCase.NamedColor:
              NamedColor = other.NamedColor;
              break;
            case ColorOneofCase.FullColor:
              FullColor = other.FullColor.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Modifier Clone() {
          return new Modifier(this);
        }

        /// <summary>Field number for the "position" field.</summary>
        public const int PositionFieldNumber = 1;
        private global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Pos position_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Pos Position {
          get { return position_; }
          set {
            position_ = value;
          }
        }

        /// <summary>Field number for the "size" field.</summary>
        public const int SizeFieldNumber = 2;
        private global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Size size_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Size Size {
          get { return size_; }
          set {
            size_ = value;
          }
        }

        /// <summary>Field number for the "named_color" field.</summary>
        public const int NamedColorFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.ColorName NamedColor {
          get { return colorCase_ == ColorOneofCase.NamedColor ? (global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.ColorName) color_ : 0; }
          set {
            color_ = value;
            colorCase_ = ColorOneofCase.NamedColor;
          }
        }

        /// <summary>Field number for the "full_color" field.</summary>
        public const int FullColorFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.FullColor FullColor {
          get { return colorCase_ == ColorOneofCase.FullColor ? (global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.FullColor) color_ : null; }
          set {
            color_ = value;
            colorCase_ = value == null ? ColorOneofCase.None : ColorOneofCase.FullColor;
          }
        }

        /// <summary>Field number for the "font" field.</summary>
        public const int FontFieldNumber = 5;
        private global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Font font_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Font Font {
          get { return font_; }
          set {
            font_ = value;
          }
        }

        /// <summary>Field number for the "opacity" field.</summary>
        public const int OpacityFieldNumber = 6;
        private global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Opacity opacity_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Opacity Opacity {
          get { return opacity_; }
          set {
            opacity_ = value;
          }
        }

        private object color_;
        /// <summary>Enum of possible cases for the "color" oneof.</summary>
        public enum ColorOneofCase {
          None = 0,
          NamedColor = 3,
          FullColor = 4,
        }
        private ColorOneofCase colorCase_ = ColorOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ColorOneofCase ColorCase {
          get { return colorCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearColor() {
          colorCase_ = ColorOneofCase.None;
          color_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Modifier);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Modifier other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Position != other.Position) return false;
          if (Size != other.Size) return false;
          if (NamedColor != other.NamedColor) return false;
          if (!object.Equals(FullColor, other.FullColor)) return false;
          if (Font != other.Font) return false;
          if (Opacity != other.Opacity) return false;
          if (ColorCase != other.ColorCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Position != 0) hash ^= Position.GetHashCode();
          if (Size != 0) hash ^= Size.GetHashCode();
          if (colorCase_ == ColorOneofCase.NamedColor) hash ^= NamedColor.GetHashCode();
          if (colorCase_ == ColorOneofCase.FullColor) hash ^= FullColor.GetHashCode();
          if (Font != 0) hash ^= Font.GetHashCode();
          if (Opacity != 0) hash ^= Opacity.GetHashCode();
          hash ^= (int) colorCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Position != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Position);
          }
          if (Size != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Size);
          }
          if (colorCase_ == ColorOneofCase.NamedColor) {
            output.WriteRawTag(24);
            output.WriteEnum((int) NamedColor);
          }
          if (colorCase_ == ColorOneofCase.FullColor) {
            output.WriteRawTag(34);
            output.WriteMessage(FullColor);
          }
          if (Font != 0) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Font);
          }
          if (Opacity != 0) {
            output.WriteRawTag(48);
            output.WriteEnum((int) Opacity);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Position != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Position);
          }
          if (Size != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Size);
          }
          if (colorCase_ == ColorOneofCase.NamedColor) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NamedColor);
          }
          if (colorCase_ == ColorOneofCase.FullColor) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FullColor);
          }
          if (Font != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Font);
          }
          if (Opacity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Opacity);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Modifier other) {
          if (other == null) {
            return;
          }
          if (other.Position != 0) {
            Position = other.Position;
          }
          if (other.Size != 0) {
            Size = other.Size;
          }
          if (other.Font != 0) {
            Font = other.Font;
          }
          if (other.Opacity != 0) {
            Opacity = other.Opacity;
          }
          switch (other.ColorCase) {
            case ColorOneofCase.NamedColor:
              NamedColor = other.NamedColor;
              break;
            case ColorOneofCase.FullColor:
              if (FullColor == null) {
                FullColor = new global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.FullColor();
              }
              FullColor.MergeFrom(other.FullColor);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                position_ = (global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Pos) input.ReadEnum();
                break;
              }
              case 16: {
                size_ = (global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Size) input.ReadEnum();
                break;
              }
              case 24: {
                color_ = input.ReadEnum();
                colorCase_ = ColorOneofCase.NamedColor;
                break;
              }
              case 34: {
                global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.FullColor subBuilder = new global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.FullColor();
                if (colorCase_ == ColorOneofCase.FullColor) {
                  subBuilder.MergeFrom(FullColor);
                }
                input.ReadMessage(subBuilder);
                FullColor = subBuilder;
                break;
              }
              case 40: {
                font_ = (global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Font) input.ReadEnum();
                break;
              }
              case 48: {
                opacity_ = (global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Types.Opacity) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Modifier message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum Pos {
            [pbr::OriginalName("naka")] Naka = 0,
            [pbr::OriginalName("shita")] Shita = 1,
            [pbr::OriginalName("ue")] Ue = 2,
          }

          public enum Size {
            [pbr::OriginalName("medium")] Medium = 0,
            [pbr::OriginalName("small")] Small = 1,
            [pbr::OriginalName("big")] Big = 2,
          }

          public enum ColorName {
            [pbr::OriginalName("white")] White = 0,
            [pbr::OriginalName("red")] Red = 1,
            [pbr::OriginalName("pink")] Pink = 2,
            [pbr::OriginalName("orange")] Orange = 3,
            [pbr::OriginalName("yellow")] Yellow = 4,
            [pbr::OriginalName("green")] Green = 5,
            [pbr::OriginalName("cyan")] Cyan = 6,
            [pbr::OriginalName("blue")] Blue = 7,
            [pbr::OriginalName("purple")] Purple = 8,
            [pbr::OriginalName("black")] Black = 9,
            [pbr::OriginalName("white2")] White2 = 10,
            [pbr::OriginalName("red2")] Red2 = 11,
            [pbr::OriginalName("pink2")] Pink2 = 12,
            [pbr::OriginalName("orange2")] Orange2 = 13,
            [pbr::OriginalName("yellow2")] Yellow2 = 14,
            [pbr::OriginalName("green2")] Green2 = 15,
            [pbr::OriginalName("cyan2")] Cyan2 = 16,
            [pbr::OriginalName("blue2")] Blue2 = 17,
            [pbr::OriginalName("purple2")] Purple2 = 18,
            [pbr::OriginalName("black2")] Black2 = 19,
          }

          public enum Font {
            [pbr::OriginalName("defont")] Defont = 0,
            [pbr::OriginalName("mincho")] Mincho = 1,
            [pbr::OriginalName("gothic")] Gothic = 2,
          }

          public enum Opacity {
            [pbr::OriginalName("Normal")] Normal = 0,
            [pbr::OriginalName("Translucent")] Translucent = 1,
          }

          public sealed partial class FullColor : pb::IMessage<FullColor> {
            private static readonly pb::MessageParser<FullColor> _parser = new pb::MessageParser<FullColor>(() => new FullColor());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<FullColor> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Dwango.Nicolive.Chat.Data.Chat.Types.Modifier.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FullColor() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FullColor(FullColor other) : this() {
              r_ = other.r_;
              g_ = other.g_;
              b_ = other.b_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FullColor Clone() {
              return new FullColor(this);
            }

            /// <summary>Field number for the "r" field.</summary>
            public const int RFieldNumber = 1;
            private int r_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int R {
              get { return r_; }
              set {
                r_ = value;
              }
            }

            /// <summary>Field number for the "g" field.</summary>
            public const int GFieldNumber = 2;
            private int g_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int G {
              get { return g_; }
              set {
                g_ = value;
              }
            }

            /// <summary>Field number for the "b" field.</summary>
            public const int BFieldNumber = 3;
            private int b_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int B {
              get { return b_; }
              set {
                b_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as FullColor);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(FullColor other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (R != other.R) return false;
              if (G != other.G) return false;
              if (B != other.B) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (R != 0) hash ^= R.GetHashCode();
              if (G != 0) hash ^= G.GetHashCode();
              if (B != 0) hash ^= B.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (R != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(R);
              }
              if (G != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(G);
              }
              if (B != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(B);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (R != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(R);
              }
              if (G != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(G);
              }
              if (B != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(B);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(FullColor other) {
              if (other == null) {
                return;
              }
              if (other.R != 0) {
                R = other.R;
              }
              if (other.G != 0) {
                G = other.G;
              }
              if (other.B != 0) {
                B = other.B;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    R = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    G = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    B = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
