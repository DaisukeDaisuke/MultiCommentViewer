// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dwango/nicolive/chat/data/Statistics.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dwango.Nicolive.Chat.Data {

  /// <summary>Holder for reflection information generated from dwango/nicolive/chat/data/Statistics.proto</summary>
  public static partial class StatisticsReflection {

    #region Descriptor
    /// <summary>File descriptor for dwango/nicolive/chat/data/Statistics.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StatisticsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cipkd2FuZ28vbmljb2xpdmUvY2hhdC9kYXRhL1N0YXRpc3RpY3MucHJvdG8S",
            "GWR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEiVwoKU3RhdGlzdGljcxIPCgd2",
            "aWV3ZXJzGAEgASgDEhAKCGNvbW1lbnRzGAIgASgDEhEKCWFkX3BvaW50cxgD",
            "IAEoAxITCgtnaWZ0X3BvaW50cxgEIAEoA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Data.Statistics), global::Dwango.Nicolive.Chat.Data.Statistics.Parser, new[]{ "Viewers", "Comments", "AdPoints", "GiftPoints" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Statistics : pb::IMessage<Statistics> {
    private static readonly pb::MessageParser<Statistics> _parser = new pb::MessageParser<Statistics>(() => new Statistics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Statistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwango.Nicolive.Chat.Data.StatisticsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Statistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Statistics(Statistics other) : this() {
      viewers_ = other.viewers_;
      comments_ = other.comments_;
      adPoints_ = other.adPoints_;
      giftPoints_ = other.giftPoints_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Statistics Clone() {
      return new Statistics(this);
    }

    /// <summary>Field number for the "viewers" field.</summary>
    public const int ViewersFieldNumber = 1;
    private long viewers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Viewers {
      get { return viewers_; }
      set {
        viewers_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 2;
    private long comments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Comments {
      get { return comments_; }
      set {
        comments_ = value;
      }
    }

    /// <summary>Field number for the "ad_points" field.</summary>
    public const int AdPointsFieldNumber = 3;
    private long adPoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AdPoints {
      get { return adPoints_; }
      set {
        adPoints_ = value;
      }
    }

    /// <summary>Field number for the "gift_points" field.</summary>
    public const int GiftPointsFieldNumber = 4;
    private long giftPoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GiftPoints {
      get { return giftPoints_; }
      set {
        giftPoints_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Statistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Statistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Viewers != other.Viewers) return false;
      if (Comments != other.Comments) return false;
      if (AdPoints != other.AdPoints) return false;
      if (GiftPoints != other.GiftPoints) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Viewers != 0L) hash ^= Viewers.GetHashCode();
      if (Comments != 0L) hash ^= Comments.GetHashCode();
      if (AdPoints != 0L) hash ^= AdPoints.GetHashCode();
      if (GiftPoints != 0L) hash ^= GiftPoints.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Viewers != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Viewers);
      }
      if (Comments != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Comments);
      }
      if (AdPoints != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AdPoints);
      }
      if (GiftPoints != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(GiftPoints);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Viewers != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Viewers);
      }
      if (Comments != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Comments);
      }
      if (AdPoints != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AdPoints);
      }
      if (GiftPoints != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GiftPoints);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Statistics other) {
      if (other == null) {
        return;
      }
      if (other.Viewers != 0L) {
        Viewers = other.Viewers;
      }
      if (other.Comments != 0L) {
        Comments = other.Comments;
      }
      if (other.AdPoints != 0L) {
        AdPoints = other.AdPoints;
      }
      if (other.GiftPoints != 0L) {
        GiftPoints = other.GiftPoints;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Viewers = input.ReadInt64();
            break;
          }
          case 16: {
            Comments = input.ReadInt64();
            break;
          }
          case 24: {
            AdPoints = input.ReadInt64();
            break;
          }
          case 32: {
            GiftPoints = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
