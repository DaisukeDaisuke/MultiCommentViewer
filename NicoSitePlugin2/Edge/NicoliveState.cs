// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dwango/nicolive/chat/data/NicoliveState.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dwango.Nicolive.Chat.Data {

  /// <summary>Holder for reflection information generated from dwango/nicolive/chat/data/NicoliveState.proto</summary>
  public static partial class NicoliveStateReflection {

    #region Descriptor
    /// <summary>File descriptor for dwango/nicolive/chat/data/NicoliveState.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NicoliveStateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1kd2FuZ28vbmljb2xpdmUvY2hhdC9kYXRhL05pY29saXZlU3RhdGUucHJv",
            "dG8SGWR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEaKmR3YW5nby9uaWNvbGl2",
            "ZS9jaGF0L2RhdGEvU3RhdGlzdGljcy5wcm90bxonZHdhbmdvL25pY29saXZl",
            "L2NoYXQvZGF0YS9FbnF1ZXRlLnByb3RvGilkd2FuZ28vbmljb2xpdmUvY2hh",
            "dC9kYXRhL01vdmVPcmRlci5wcm90bxomZHdhbmdvL25pY29saXZlL2NoYXQv",
            "ZGF0YS9NYXJxdWUucHJvdG8aK2R3YW5nby9uaWNvbGl2ZS9jaGF0L2RhdGEv",
            "Q29tbWVudExvY2sucHJvdG8aK2R3YW5nby9uaWNvbGl2ZS9jaGF0L2RhdGEv",
            "Q29tbWVudE1vZGUucHJvdG8aKmR3YW5nby9uaWNvbGl2ZS9jaGF0L2RhdGEv",
            "VHJpYWxQYW5lbC5wcm90bxorZHdhbmdvL25pY29saXZlL2NoYXQvZGF0YS9G",
            "aW5nZXJQcmludC5wcm90bxotZHdhbmdvL25pY29saXZlL2NoYXQvZGF0YS9Q",
            "cm9ncmFtU3RhdHVzLnByb3RvGjxkd2FuZ28vbmljb2xpdmUvY2hhdC9kYXRh",
            "L2F0b21zL01vZGVyYXRpb25Bbm5vdW5jZW1lbnQucHJvdG8i/gQKDU5pY29s",
            "aXZlU3RhdGUSOQoKc3RhdGlzdGljcxgBIAEoCzIlLmR3YW5nby5uaWNvbGl2",
            "ZS5jaGF0LmRhdGEuU3RhdGlzdGljcxIzCgdlbnF1ZXRlGAIgASgLMiIuZHdh",
            "bmdvLm5pY29saXZlLmNoYXQuZGF0YS5FbnF1ZXRlEjgKCm1vdmVfb3JkZXIY",
            "AyABKAsyJC5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLk1vdmVPcmRlchIx",
            "CgZtYXJxdWUYBCABKAsyIS5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLk1h",
            "cnF1ZRI8Cgxjb21tZW50X2xvY2sYBSABKAsyJi5kd2FuZ28ubmljb2xpdmUu",
            "Y2hhdC5kYXRhLkNvbW1lbnRMb2NrEjwKDGNvbW1lbnRfbW9kZRgGIAEoCzIm",
            "LmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuQ29tbWVudE1vZGUSOgoLdHJp",
            "YWxfcGFuZWwYByABKAsyJS5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLlRy",
            "aWFsUGFuZWwSPAoMZmluZ2VyX3ByaW50GAggASgLMiYuZHdhbmdvLm5pY29s",
            "aXZlLmNoYXQuZGF0YS5GaW5nZXJQcmludBJACg5wcm9ncmFtX3N0YXR1cxgJ",
            "IAEoCzIoLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuUHJvZ3JhbVN0YXR1",
            "cxJYChdtb2RlcmF0aW9uX2Fubm91bmNlbWVudBgKIAEoCzI3LmR3YW5nby5u",
            "aWNvbGl2ZS5jaGF0LmRhdGEuYXRvbXMuTW9kZXJhdGlvbkFubm91bmNlbWVu",
            "dGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Dwango.Nicolive.Chat.Data.StatisticsReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.EnqueteReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.MoveOrderReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.MarqueReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.CommentLockReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.CommentModeReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.TrialPanelReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.FingerPrintReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.ProgramStatusReflection.Descriptor, global::Dwango.Nicolive.Chat.Data.Atoms.ModerationAnnouncementReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Data.NicoliveState), global::Dwango.Nicolive.Chat.Data.NicoliveState.Parser, new[]{ "Statistics", "Enquete", "MoveOrder", "Marque", "CommentLock", "CommentMode", "TrialPanel", "FingerPrint", "ProgramStatus", "ModerationAnnouncement" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class NicoliveState : pb::IMessage<NicoliveState> {
    private static readonly pb::MessageParser<NicoliveState> _parser = new pb::MessageParser<NicoliveState>(() => new NicoliveState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NicoliveState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwango.Nicolive.Chat.Data.NicoliveStateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NicoliveState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NicoliveState(NicoliveState other) : this() {
      statistics_ = other.statistics_ != null ? other.statistics_.Clone() : null;
      enquete_ = other.enquete_ != null ? other.enquete_.Clone() : null;
      moveOrder_ = other.moveOrder_ != null ? other.moveOrder_.Clone() : null;
      marque_ = other.marque_ != null ? other.marque_.Clone() : null;
      commentLock_ = other.commentLock_ != null ? other.commentLock_.Clone() : null;
      commentMode_ = other.commentMode_ != null ? other.commentMode_.Clone() : null;
      trialPanel_ = other.trialPanel_ != null ? other.trialPanel_.Clone() : null;
      fingerPrint_ = other.fingerPrint_ != null ? other.fingerPrint_.Clone() : null;
      programStatus_ = other.programStatus_ != null ? other.programStatus_.Clone() : null;
      moderationAnnouncement_ = other.moderationAnnouncement_ != null ? other.moderationAnnouncement_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NicoliveState Clone() {
      return new NicoliveState(this);
    }

    /// <summary>Field number for the "statistics" field.</summary>
    public const int StatisticsFieldNumber = 1;
    private global::Dwango.Nicolive.Chat.Data.Statistics statistics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.Statistics Statistics {
      get { return statistics_; }
      set {
        statistics_ = value;
      }
    }

    /// <summary>Field number for the "enquete" field.</summary>
    public const int EnqueteFieldNumber = 2;
    private global::Dwango.Nicolive.Chat.Data.Enquete enquete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.Enquete Enquete {
      get { return enquete_; }
      set {
        enquete_ = value;
      }
    }

    /// <summary>Field number for the "move_order" field.</summary>
    public const int MoveOrderFieldNumber = 3;
    private global::Dwango.Nicolive.Chat.Data.MoveOrder moveOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.MoveOrder MoveOrder {
      get { return moveOrder_; }
      set {
        moveOrder_ = value;
      }
    }

    /// <summary>Field number for the "marque" field.</summary>
    public const int MarqueFieldNumber = 4;
    private global::Dwango.Nicolive.Chat.Data.Marque marque_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.Marque Marque {
      get { return marque_; }
      set {
        marque_ = value;
      }
    }

    /// <summary>Field number for the "comment_lock" field.</summary>
    public const int CommentLockFieldNumber = 5;
    private global::Dwango.Nicolive.Chat.Data.CommentLock commentLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.CommentLock CommentLock {
      get { return commentLock_; }
      set {
        commentLock_ = value;
      }
    }

    /// <summary>Field number for the "comment_mode" field.</summary>
    public const int CommentModeFieldNumber = 6;
    private global::Dwango.Nicolive.Chat.Data.CommentMode commentMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.CommentMode CommentMode {
      get { return commentMode_; }
      set {
        commentMode_ = value;
      }
    }

    /// <summary>Field number for the "trial_panel" field.</summary>
    public const int TrialPanelFieldNumber = 7;
    private global::Dwango.Nicolive.Chat.Data.TrialPanel trialPanel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.TrialPanel TrialPanel {
      get { return trialPanel_; }
      set {
        trialPanel_ = value;
      }
    }

    /// <summary>Field number for the "finger_print" field.</summary>
    public const int FingerPrintFieldNumber = 8;
    private global::Dwango.Nicolive.Chat.Data.FingerPrint fingerPrint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.FingerPrint FingerPrint {
      get { return fingerPrint_; }
      set {
        fingerPrint_ = value;
      }
    }

    /// <summary>Field number for the "program_status" field.</summary>
    public const int ProgramStatusFieldNumber = 9;
    private global::Dwango.Nicolive.Chat.Data.ProgramStatus programStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.ProgramStatus ProgramStatus {
      get { return programStatus_; }
      set {
        programStatus_ = value;
      }
    }

    /// <summary>Field number for the "moderation_announcement" field.</summary>
    public const int ModerationAnnouncementFieldNumber = 10;
    private global::Dwango.Nicolive.Chat.Data.Atoms.ModerationAnnouncement moderationAnnouncement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.Atoms.ModerationAnnouncement ModerationAnnouncement {
      get { return moderationAnnouncement_; }
      set {
        moderationAnnouncement_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NicoliveState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NicoliveState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Statistics, other.Statistics)) return false;
      if (!object.Equals(Enquete, other.Enquete)) return false;
      if (!object.Equals(MoveOrder, other.MoveOrder)) return false;
      if (!object.Equals(Marque, other.Marque)) return false;
      if (!object.Equals(CommentLock, other.CommentLock)) return false;
      if (!object.Equals(CommentMode, other.CommentMode)) return false;
      if (!object.Equals(TrialPanel, other.TrialPanel)) return false;
      if (!object.Equals(FingerPrint, other.FingerPrint)) return false;
      if (!object.Equals(ProgramStatus, other.ProgramStatus)) return false;
      if (!object.Equals(ModerationAnnouncement, other.ModerationAnnouncement)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (statistics_ != null) hash ^= Statistics.GetHashCode();
      if (enquete_ != null) hash ^= Enquete.GetHashCode();
      if (moveOrder_ != null) hash ^= MoveOrder.GetHashCode();
      if (marque_ != null) hash ^= Marque.GetHashCode();
      if (commentLock_ != null) hash ^= CommentLock.GetHashCode();
      if (commentMode_ != null) hash ^= CommentMode.GetHashCode();
      if (trialPanel_ != null) hash ^= TrialPanel.GetHashCode();
      if (fingerPrint_ != null) hash ^= FingerPrint.GetHashCode();
      if (programStatus_ != null) hash ^= ProgramStatus.GetHashCode();
      if (moderationAnnouncement_ != null) hash ^= ModerationAnnouncement.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (statistics_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Statistics);
      }
      if (enquete_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Enquete);
      }
      if (moveOrder_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MoveOrder);
      }
      if (marque_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Marque);
      }
      if (commentLock_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CommentLock);
      }
      if (commentMode_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CommentMode);
      }
      if (trialPanel_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TrialPanel);
      }
      if (fingerPrint_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FingerPrint);
      }
      if (programStatus_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ProgramStatus);
      }
      if (moderationAnnouncement_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ModerationAnnouncement);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (statistics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Statistics);
      }
      if (enquete_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Enquete);
      }
      if (moveOrder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveOrder);
      }
      if (marque_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Marque);
      }
      if (commentLock_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommentLock);
      }
      if (commentMode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommentMode);
      }
      if (trialPanel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrialPanel);
      }
      if (fingerPrint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FingerPrint);
      }
      if (programStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgramStatus);
      }
      if (moderationAnnouncement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModerationAnnouncement);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NicoliveState other) {
      if (other == null) {
        return;
      }
      if (other.statistics_ != null) {
        if (statistics_ == null) {
          statistics_ = new global::Dwango.Nicolive.Chat.Data.Statistics();
        }
        Statistics.MergeFrom(other.Statistics);
      }
      if (other.enquete_ != null) {
        if (enquete_ == null) {
          enquete_ = new global::Dwango.Nicolive.Chat.Data.Enquete();
        }
        Enquete.MergeFrom(other.Enquete);
      }
      if (other.moveOrder_ != null) {
        if (moveOrder_ == null) {
          moveOrder_ = new global::Dwango.Nicolive.Chat.Data.MoveOrder();
        }
        MoveOrder.MergeFrom(other.MoveOrder);
      }
      if (other.marque_ != null) {
        if (marque_ == null) {
          marque_ = new global::Dwango.Nicolive.Chat.Data.Marque();
        }
        Marque.MergeFrom(other.Marque);
      }
      if (other.commentLock_ != null) {
        if (commentLock_ == null) {
          commentLock_ = new global::Dwango.Nicolive.Chat.Data.CommentLock();
        }
        CommentLock.MergeFrom(other.CommentLock);
      }
      if (other.commentMode_ != null) {
        if (commentMode_ == null) {
          commentMode_ = new global::Dwango.Nicolive.Chat.Data.CommentMode();
        }
        CommentMode.MergeFrom(other.CommentMode);
      }
      if (other.trialPanel_ != null) {
        if (trialPanel_ == null) {
          trialPanel_ = new global::Dwango.Nicolive.Chat.Data.TrialPanel();
        }
        TrialPanel.MergeFrom(other.TrialPanel);
      }
      if (other.fingerPrint_ != null) {
        if (fingerPrint_ == null) {
          fingerPrint_ = new global::Dwango.Nicolive.Chat.Data.FingerPrint();
        }
        FingerPrint.MergeFrom(other.FingerPrint);
      }
      if (other.programStatus_ != null) {
        if (programStatus_ == null) {
          programStatus_ = new global::Dwango.Nicolive.Chat.Data.ProgramStatus();
        }
        ProgramStatus.MergeFrom(other.ProgramStatus);
      }
      if (other.moderationAnnouncement_ != null) {
        if (moderationAnnouncement_ == null) {
          moderationAnnouncement_ = new global::Dwango.Nicolive.Chat.Data.Atoms.ModerationAnnouncement();
        }
        ModerationAnnouncement.MergeFrom(other.ModerationAnnouncement);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (statistics_ == null) {
              statistics_ = new global::Dwango.Nicolive.Chat.Data.Statistics();
            }
            input.ReadMessage(statistics_);
            break;
          }
          case 18: {
            if (enquete_ == null) {
              enquete_ = new global::Dwango.Nicolive.Chat.Data.Enquete();
            }
            input.ReadMessage(enquete_);
            break;
          }
          case 26: {
            if (moveOrder_ == null) {
              moveOrder_ = new global::Dwango.Nicolive.Chat.Data.MoveOrder();
            }
            input.ReadMessage(moveOrder_);
            break;
          }
          case 34: {
            if (marque_ == null) {
              marque_ = new global::Dwango.Nicolive.Chat.Data.Marque();
            }
            input.ReadMessage(marque_);
            break;
          }
          case 42: {
            if (commentLock_ == null) {
              commentLock_ = new global::Dwango.Nicolive.Chat.Data.CommentLock();
            }
            input.ReadMessage(commentLock_);
            break;
          }
          case 50: {
            if (commentMode_ == null) {
              commentMode_ = new global::Dwango.Nicolive.Chat.Data.CommentMode();
            }
            input.ReadMessage(commentMode_);
            break;
          }
          case 58: {
            if (trialPanel_ == null) {
              trialPanel_ = new global::Dwango.Nicolive.Chat.Data.TrialPanel();
            }
            input.ReadMessage(trialPanel_);
            break;
          }
          case 66: {
            if (fingerPrint_ == null) {
              fingerPrint_ = new global::Dwango.Nicolive.Chat.Data.FingerPrint();
            }
            input.ReadMessage(fingerPrint_);
            break;
          }
          case 74: {
            if (programStatus_ == null) {
              programStatus_ = new global::Dwango.Nicolive.Chat.Data.ProgramStatus();
            }
            input.ReadMessage(programStatus_);
            break;
          }
          case 82: {
            if (moderationAnnouncement_ == null) {
              moderationAnnouncement_ = new global::Dwango.Nicolive.Chat.Data.Atoms.ModerationAnnouncement();
            }
            input.ReadMessage(moderationAnnouncement_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
