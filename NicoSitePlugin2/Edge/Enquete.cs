// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dwango/nicolive/chat/data/Enquete.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dwango.Nicolive.Chat.Data {

  /// <summary>Holder for reflection information generated from dwango/nicolive/chat/data/Enquete.proto</summary>
  public static partial class EnqueteReflection {

    #region Descriptor
    /// <summary>File descriptor for dwango/nicolive/chat/data/Enquete.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EnqueteReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidkd2FuZ28vbmljb2xpdmUvY2hhdC9kYXRhL0VucXVldGUucHJvdG8SGWR3",
            "YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEi8AEKB0VucXVldGUSEAoIcXVlc3Rp",
            "b24YASABKAkSOgoHY2hvaWNlcxgCIAMoCzIpLmR3YW5nby5uaWNvbGl2ZS5j",
            "aGF0LmRhdGEuRW5xdWV0ZS5DaG9pY2USOQoGc3RhdHVzGAMgASgOMikuZHdh",
            "bmdvLm5pY29saXZlLmNoYXQuZGF0YS5FbnF1ZXRlLlN0YXR1cxowCgZDaG9p",
            "Y2USEwoLZGVzY3JpcHRpb24YASABKAkSEQoJcGVyX21pbGxlGAMgASgFIioK",
            "BlN0YXR1cxIKCgZDbG9zZWQQABIICgRQb2xsEAESCgoGUmVzdWx0EAJiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Data.Enquete), global::Dwango.Nicolive.Chat.Data.Enquete.Parser, new[]{ "Question", "Choices", "Status" }, null, new[]{ typeof(global::Dwango.Nicolive.Chat.Data.Enquete.Types.Status) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Data.Enquete.Types.Choice), global::Dwango.Nicolive.Chat.Data.Enquete.Types.Choice.Parser, new[]{ "Description", "PerMille" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Enquete : pb::IMessage<Enquete> {
    private static readonly pb::MessageParser<Enquete> _parser = new pb::MessageParser<Enquete>(() => new Enquete());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Enquete> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwango.Nicolive.Chat.Data.EnqueteReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enquete() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enquete(Enquete other) : this() {
      question_ = other.question_;
      choices_ = other.choices_.Clone();
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enquete Clone() {
      return new Enquete(this);
    }

    /// <summary>Field number for the "question" field.</summary>
    public const int QuestionFieldNumber = 1;
    private string question_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Question {
      get { return question_; }
      set {
        question_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "choices" field.</summary>
    public const int ChoicesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Dwango.Nicolive.Chat.Data.Enquete.Types.Choice> _repeated_choices_codec
        = pb::FieldCodec.ForMessage(18, global::Dwango.Nicolive.Chat.Data.Enquete.Types.Choice.Parser);
    private readonly pbc::RepeatedField<global::Dwango.Nicolive.Chat.Data.Enquete.Types.Choice> choices_ = new pbc::RepeatedField<global::Dwango.Nicolive.Chat.Data.Enquete.Types.Choice>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dwango.Nicolive.Chat.Data.Enquete.Types.Choice> Choices {
      get { return choices_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Dwango.Nicolive.Chat.Data.Enquete.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.Enquete.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Enquete);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Enquete other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Question != other.Question) return false;
      if(!choices_.Equals(other.choices_)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Question.Length != 0) hash ^= Question.GetHashCode();
      hash ^= choices_.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Question.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Question);
      }
      choices_.WriteTo(output, _repeated_choices_codec);
      if (Status != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Question.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Question);
      }
      size += choices_.CalculateSize(_repeated_choices_codec);
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Enquete other) {
      if (other == null) {
        return;
      }
      if (other.Question.Length != 0) {
        Question = other.Question;
      }
      choices_.Add(other.choices_);
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Question = input.ReadString();
            break;
          }
          case 18: {
            choices_.AddEntriesFrom(input, _repeated_choices_codec);
            break;
          }
          case 24: {
            status_ = (global::Dwango.Nicolive.Chat.Data.Enquete.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Enquete message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("Closed")] Closed = 0,
        [pbr::OriginalName("Poll")] Poll = 1,
        [pbr::OriginalName("Result")] Result = 2,
      }

      public sealed partial class Choice : pb::IMessage<Choice> {
        private static readonly pb::MessageParser<Choice> _parser = new pb::MessageParser<Choice>(() => new Choice());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Choice> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Dwango.Nicolive.Chat.Data.Enquete.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Choice() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Choice(Choice other) : this() {
          description_ = other.description_;
          perMille_ = other.perMille_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Choice Clone() {
          return new Choice(this);
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 1;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "per_mille" field.</summary>
        public const int PerMilleFieldNumber = 3;
        private int perMille_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PerMille {
          get { return perMille_; }
          set {
            perMille_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Choice);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Choice other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Description != other.Description) return false;
          if (PerMille != other.PerMille) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (PerMille != 0) hash ^= PerMille.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Description.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Description);
          }
          if (PerMille != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(PerMille);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (PerMille != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PerMille);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Choice other) {
          if (other == null) {
            return;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.PerMille != 0) {
            PerMille = other.PerMille;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Description = input.ReadString();
                break;
              }
              case 24: {
                PerMille = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
