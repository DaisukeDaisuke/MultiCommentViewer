// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dwango/nicolive/chat/data/CommentMode.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dwango.Nicolive.Chat.Data {

  /// <summary>Holder for reflection information generated from dwango/nicolive/chat/data/CommentMode.proto</summary>
  public static partial class CommentModeReflection {

    #region Descriptor
    /// <summary>File descriptor for dwango/nicolive/chat/data/CommentMode.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommentModeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Citkd2FuZ28vbmljb2xpdmUvY2hhdC9kYXRhL0NvbW1lbnRNb2RlLnByb3Rv",
            "Ehlkd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhIoABCgtDb21tZW50TW9kZRI9",
            "CgZsYXlvdXQYASABKA4yLS5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLkNv",
            "bW1lbnRNb2RlLkxheW91dCIyCgZMYXlvdXQSCgoGTm9ybWFsEAASDAoIU3Bs",
            "aXRUb3AQARIOCgpCYWNrZ3JvdW5kEAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dwango.Nicolive.Chat.Data.CommentMode), global::Dwango.Nicolive.Chat.Data.CommentMode.Parser, new[]{ "Layout" }, null, new[]{ typeof(global::Dwango.Nicolive.Chat.Data.CommentMode.Types.Layout) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CommentMode : pb::IMessage<CommentMode> {
    private static readonly pb::MessageParser<CommentMode> _parser = new pb::MessageParser<CommentMode>(() => new CommentMode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommentMode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dwango.Nicolive.Chat.Data.CommentModeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentMode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentMode(CommentMode other) : this() {
      layout_ = other.layout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommentMode Clone() {
      return new CommentMode(this);
    }

    /// <summary>Field number for the "layout" field.</summary>
    public const int LayoutFieldNumber = 1;
    private global::Dwango.Nicolive.Chat.Data.CommentMode.Types.Layout layout_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dwango.Nicolive.Chat.Data.CommentMode.Types.Layout Layout {
      get { return layout_; }
      set {
        layout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommentMode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommentMode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Layout != other.Layout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Layout != 0) hash ^= Layout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Layout != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Layout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Layout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Layout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommentMode other) {
      if (other == null) {
        return;
      }
      if (other.Layout != 0) {
        Layout = other.Layout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            layout_ = (global::Dwango.Nicolive.Chat.Data.CommentMode.Types.Layout) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CommentMode message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Layout {
        [pbr::OriginalName("Normal")] Normal = 0,
        [pbr::OriginalName("SplitTop")] SplitTop = 1,
        [pbr::OriginalName("Background")] Background = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
